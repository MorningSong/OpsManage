version: "3.7"
services:
  mysql:
    image: mysql:5.6  
    container_name: mysql
    environment:
      - MYSQL_HOST=%
      - MYSQL_DATABASE=opsmanage
      - MYSQL_USER=数据库用户名
      - MYSQL_PASSWORD=数据库用户密码
      - MYSQL_ROOT_PASSWORD=数据库root密码
    volumes:
      - /data/apps/mysql:/var/lib/mysql  
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: always  
    networks:
      - default
      
  redis:
     container_name: redis
     image: redis:3.2.8
     command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
     environment:
       REDIS_PASSWORD: "密码" # 
       REDIS_AOF_ENABLED: "no"
     ports:
       - "6379:6379"
     volumes:
       - /data/apps/redis:/data
     networks:
       - default  
       
  rabbitmq:
     container_name: rabbitmq
     image: rabbitmq:management
     environment:
       RABBITMQ_DEFAULT_USER: admin
       RABBITMQ_DEFAULT_PASS: admin
     volumes:
       - '/data/apps/rabbitmq/data/:/var/lib/rabbitmq/mnesia/'
     ports:
       - "5672:5672"
       - "15672:15672"
     networks:
       - default  

  ops_web:
     image: opsmanage-base:latest
     container_name: ops_web
     environment:
       MYSQL_USER: root
       MYSQL_DATABASE: opsmanage
       MYSQL_PASSWORD: "数据库用户密码"
     ports:
       - "8000:8000"  
     volumes:
       - /data/apps/OpsManage:/data/apps/opsmanage
       - /data/apps/OpsManage/upload:/data/apps/opsmanage/upload
       - /data/apps/OpsManage/logs:/data/apps/opsmanage/logs
     command: bash /data/apps/opsmanage/docker/start.sh  
     links:
       - mysql
       - redis
       - rabbitmq
     depends_on:
       mysql:
         condition: service_healthy
       redis:
         condition: service_started
       rabbitmq:
         condition: service_started       
     restart: always
     networks:
       - default  

  nginx:
     image: nginx
     container_name: nginx
     ports:
       - "80:80"   
     volumes:
       - /data/apps/nginx/logs:/var/log/nginx
       - /data/apps/OpsManage/docker/opsmanage.conf:/etc/nginx/conf.d/default.conf
       - /data/apps/OpsManage/static:/data/apps/opsmanage/static
       - /data/apps/OpsManage/upload:/data/apps/opsmanage/upload
     depends_on:
       - ops_web
     links:
       - ops_web:ops_web
     networks:
       - default
networks:
  default:
